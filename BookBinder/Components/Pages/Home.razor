@page "/"
@using BookBinder.Models
@using BookBinder.Services
@using BookBinder.UI
@using BookBinder.Utils

@inject INoteService _noteService;
@inject NavigationManager _navigationManager;
@inject StateContainer _stateContainer;
@inject AppState _appState;

<MudButton Variant="Variant.Filled">Default</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary">Primary</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Secondary">Secondary</MudButton>

<h1>Hello, world!</h1>

Welcome to your new app.

@if (_bookNotes == null)
{
    <p>Loading...</p>
}
else
{
    <MudPaper Width="100%">
         <MudNavMenu>>
            @foreach (var bookNote in _bookNotes)
            {
                @* <MudNavLink Href="@($"note-detail/{bookNote.Id}")">@bookNote.Title</MudNavLink> *@
                <MudListItem Text="@bookNote.Title" @onclick="() => GoToNoteDetail(bookNote)" />
            }
        </MudNavMenu>
    </MudPaper>
}


@code{
    private List<BookNote> _bookNotes;


    protected override async Task OnInitializedAsync()
    {
        _appState.SetTitle("Notes");
        _bookNotes = _noteService.GetNotes().ToList();
    }

    void GoToNoteDetail(BookNote bookNote){
        var hashCode = bookNote.GetHashCode();
        _stateContainer.ObjectTunnel.Add(hashCode, bookNote);
        Console.WriteLine("Sending hash " + hashCode);

        _navigationManager.NavigateTo($"/note-detail/{hashCode}");
    }
}