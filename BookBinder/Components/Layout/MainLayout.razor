@using MudBlazor
@using BookBinder.UI

@inherits LayoutComponentBase

@inject AppState AppState
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@implements IDisposable

<MudThemeProvider DefaultScrollbar="false" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        @AppState.CurrentTitle
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => ComeBackComeBack())" hidden="@{!AppState.NavigationVisible}" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    /// <summary>
    /// YEEE FROM THAT MEME
    /// </summary>
    async Task ComeBackComeBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }

}